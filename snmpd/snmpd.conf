{% if salt['pillar.get']('netbox:role:name') %}
{%- set role = salt['pillar.get']('netbox:role:name') %}
{% else %}
{%- set role = salt['pillar.get']('netbox:device_role:name') %}
{% endif %}

{% set snmp_addresses = salt['pillar.get']('netbox:services:snmp:ipaddresses') %}

{%- set ro_community = salt['pillar.get']('netbox:services:snmp:custom_fields:api_token') %}
{%- set sys_location = salt['pillar.get']('netbox:site:name') %}
{%- set address = salt['pillar.get']('netbox:primary_ip4:address') | regex_replace('/\d+$','') %}
{%- set address6 = salt['pillar.get']('netbox:primary_ip6:address') | regex_replace('/\d+$','') %}
#
# /etc/snmp/snmpd.conf (Salt managed)
#

sysLocation	{{ sys_location }}
sysContact	{{ sys_contact }}
sysServices	72

# Listen for connections from the local system

# Listen for connections on Loopback-IPs
{% if address and address6 %}
agentAddress  udp:127.0.0.1:161
agentAddress  udp6:[::1]:161
agentAddress  udp:{{ address }}:161
agentAddress  udp6:[{{ address6 }}]:161
{% endif %}
rocommunity   {{ ro_community }} 127.0.0.1
rocommunity6 {{ ro_community }}	::1

<<<<<<< HEAD
{% for snmp_address in snmp_addresses %}
{%- if snmp_address['family'] == 4 %}
rocommunity   {{ ro_community }} {{ snmp_address['address'] | regex_replace('/\d+$','') }}
{%- elif snmp_address['family'] == 6 %}
rocommunity6 {{ ro_community }}	{{ snmp_address['address'] | regex_replace('/\d+$','') }}
{%- endif %}
{% endfor %}

com2sec notConfigUser  default  {{ ro_community }}
group   notConfigGroup v1       notConfigUser
group   notConfigGroup v2c      notConfigUser
view    systemview    included   .1.3.6.1.2.1.1
view    systemview    included   .1.3.6.1.2.1.25.1.1
access  notConfigGroup ""      any       noauth    exact  systemview none none

sysLocation    {{ sys_location }}
sysContact     hilfe@ffmuc.net
sysServices    72
=======
# We accept requests from those fine boxes
rocommunity	{{ ro_community }}	127.0.0.1
rocommunity6	{{ ro_community }}	::1
{%- for entry in nms_list %}
  {%- if ':' in entry %}
rocommunity6	{{ ro_community }}	{{ entry }}
  {%- else %}
rocommunity	{{ ro_community }}	{{ entry }}
  {%- endif %}
{%- endfor %}
>>>>>>> upstream/master

#
# Network interfaces
#
<<<<<<< HEAD
{%- if 'gateway' in role %}
# Set B.A.T.M.A.N. related devices to 100 MBit/s
# FIXME: For all sites 'n stuff
interface	bat0		6	100000000
interface	inter-gw-vpn	6	100000000
interface	mesh-vpn-v4	6	100000000
interface	mesh-vpn-v6	6	100000000
=======
# Set bandwidth of VLAN, B.A.T.M.A.N., bridge and vEth interface to 100Mb/s
# The default is 10Mb/s which makes LibreNMS whine quite a lot if there is
# a little traffic. 100Mb/s currently seems a decent idea for us but is not
# an ideal value for everyone.
{%- for iface in ifaces|sort %}
 {%- set config = ifaces.get (iface) %}
 {%- if 'vlan-raw-device' in config or "batman" in config or "bridge" in config or config.get ('link-type', '') == 'veth' %}
interface	{{ iface }}	6	100000000
 {%- endif %}
{%- endfor %}

{%- if "fastd" in node_config.get ('roles') %}
  {%- for site in node_config.get ('sites') %}
interface	{{ site }}_intergw	6	100000000
  {%- endfor %}
>>>>>>> upstream/master
{%- endif %}

{%- set ovpn_networks = [] %}
{%- for netname, network in salt['pillar.get']('ovpn', {}).items () if grains['id'] in network %}
  {%- do ovpn_networks.append (netname) %}
{%- endfor %}
{%- for netname in ovpn_networks|sort %}
  {%- set network = salt['pillar.get']('ovpn:' ~ netname) %}
  {%- set network_config = network.get ('config') %}
  {%- set host_stanza = network.get (grains['id']) %}
  {%- set host_config = host_stanza.get ('config', {}) %}
  {%- set interface = host_config.get ('interface', network_config.get ('interface')) %}
  {%- if loop.first %}
# OpenVPN interfaces
  {%- endif %}
interface	{{ interface }}	6	100000000
{%- endfor %}

#
<<<<<<< HEAD
# Try to figure out meaningful interface descriptions/aliases
pass	.1.3.6.1.2.1.31.1.1.1.18	/etc/snmp/ifAlias

=======
#  Disk Monitoring
#
                               # 10MBs required on root disk, 5% free on /var, 10% free on all other disks
disk       /     10000
disk       /var  5%
includeAllDisks  10%

#  Walk the UCD-SNMP-MIB::dskTable to see the resulting output
#  Note that this table will be empty if there are no "disk" entries in the snmpd.conf file


#
#  System Load
#
                               # Unacceptable 1-, 5-, and 15-minute load averages
load   12 10 5

#  Walk the UCD-SNMP-MIB::laTable to see the resulting output
#  Note that this table *will* be populated, even without a "load" entry in the snmpd.conf file


#
#  Event MIB - automatically generate alerts
#
                                   # Remember to activate the 'createUser' lines above
iquerySecName   internalUser
rouser          internalUser
                                   # generate traps on UCD error conditions
defaultMonitors          no
                                   # generate traps on linkUp/Down
linkUpDownNotifications  no


master          agentx
>>>>>>> upstream/master
